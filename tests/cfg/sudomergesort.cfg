def sudomergesort(list: List) {
  1: {
    let length = list.length
    let sortedlist = (copy list)[#1]
  } -> 2
  2: if (= length 2) then 3 else 7
  3: {
    let fst = (pop < sortedlist)
    let snd = (pop < sortedlist)
  } -> 4
  4: if (< snd fst) then 5 else 6
  5: {
    push sortedlist < snd
    push sortedlist < fst
  } -> 13
  6: {
    push sortedlist < fst
    push sortedlist < snd
  } -> 13
  7: {
    let left = (new [])[#1]
    let right = sortedlist
    let i = (>> length 1)
  } -> 8
  8: loop[repeat] (< 0 i) then 9 else 10
  9: {
    i = (- i 1)
    %0 = (pop < right)
    push left < %0
  } -> 8
  10: call sortedleft = clo<sudomergesort>(left)
  11: call sortedright = clo<sudomergesort>(right)
  12: sortedlist = (list-concat [? sortedleft] [? sortedright])[#1] -> 13
  13: return sortedlist
}

1: let list = (new [2, 1, 3, 4, 6, 5, 8, 7]) [#1]
2: call sortedlist = clo<sudomergesort>(list)
3: {
  assert (= sortedlist[0] 1)
  assert (= sortedlist[1] 2)
  assert (= sortedlist[2] 3)
  assert (= sortedlist[3] 4)
  assert (= sortedlist[4] 5)
  assert (= sortedlist[5] 6)
  assert (= sortedlist[6] 7)
  assert (= sortedlist[7] 8)
}

def foldleft(init: int, list: List, f: Function) {
  1: if (= list.length 0) then 2 else 3
  2: %0 = init -> 6
  3: let hd = (pop < list) -> 4
  4: call newinit = f(init, hd) -> 5
  5: call %0 = clo<foldleft>(newinit, list, f) -> 6
  6: return %0
}

def add(i: int, j: int) {
  1: return (+ i j)
}

1: let list = (new [1, 2, 3, 4, 5])[#1]
2: call sum = clo<foldleft>(0, list, clo<add>)
3: {
  assert (= sum 15)
}

0: @main f(x: any) {
  1: {
    let nx = 1.2f
    let ny = 2.0f
    let x = 3
    let y = 5
    let bx = 1n
    let by = 2n
    let sx = "a"
    let sy = "bc"

    // booleans
    assert (&& true true)
    assert (! (&& true false))
    assert (! (&& false true))
    assert (! (&& false false))
    assert (|| true true)
    assert (|| true false)
    assert (|| false true)
    assert (! (|| false false))
    assert (! (^^ true true))
    assert (^^ true false)
    assert (^^ false true)
    assert (! (^^ false false))
    assert (== true true)
    assert (! (== true false))
    assert (! (== true false))
    assert (== false false)

    // absent
    assert (! (= nx absent))

    // numbers
    assert (< nx ny)
    assert (== nx nx)
    assert (= ny ny)
    assert (! (== nx ny))

    // math values with numbers
    assert (! (< x ny))
    assert (! (== x ny))
    assert (= x 3.0f)
    assert (! (= 0 -0.0f))
    assert (== 3 3.0f)
    assert (< nx y)
    assert (! (== nx y))
    assert (= ny 2)
    assert (! (= 0 -0.0f))
    assert (== 3.0f 3)

    // math values
    assert (! (< y x))
    assert (! (== y x))

    // strings
    assert (< sx sy)

    // big integers with other numeric values
    assert (= ny by)
    assert (= by ny)
    assert (= 1 bx)
    assert (= bx 1)
    assert (! (== by 1))
    assert (< bx nx)
    assert (< bx x)
    assert (< nx by)
    assert (! (< x bx))
    assert (< bx by)
  }
}

def f() {
  1: return 0
}

// pure
1: {
  let a = 0
  assert (= [? a] 0)
  assert (= [! a] 0)
} -> 2
// completion
2: call comp = clo<f>() -> 3
3: {
  assert (= [? comp] 0)
  assert (= [! comp] 0)
}

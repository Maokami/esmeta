def <SYNTAX>:AssignmentExpression[8,0].Evaluation(this: Unknown): Unknown {
  call %0 = this[0].Evaluation(this[0])
  let lref = [? %0] // BUG
  call %1 = clo<GetValue>(lref)
  let lval = [? %1]
  if (! (|| (= lval undefined) (= lval null))) {
    return lval
  } else {}
  call %3 = clo<IsAnonymousFunctionDefinition>(this[1])
  %2 = (= %3 true)
  if %2 {
    call %4 = this[0].IsIdentifierRef(this[0])
    %2 = (= %4 true)
  } else {}
  if %2 {
    call %5 = this[1].NamedEvaluation(this[1], lref.ReferencedName)
    let rval = [? %5]
  } else {
    call %6 = this[1].Evaluation(this[1])
    let rref = %6
    call %7 = clo<GetValue>(rref)
    let rval = [? %7]
  }
  call %8 = clo<PutValue>(lref, rval)
  [? %8]
  return rval
}
